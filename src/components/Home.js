import { HashLink } from "react-router-hash-link";
// import Countdown from "../Countdown";
import { useModal } from "../hooks/useModal";
import "./Modal.css";
import { FigureModal } from "./FigureModal";
import { useState, useEffect } from "react";
// import FormConfirm from "./FormConfirm";
import { DataCliente } from "./DataCliente";
import { DataSalon } from "./DataSalon";

export default function Home() {
  // Despu√©s del festejo no lleva Contdown

  // Ingresar datos del cliente y fecha l√≠mite del contDown en DataCliente.js
  const { limitDate, dataCumple } = DataCliente();

  // Ingresar datos del sal√≥n en DataSalon.js
  const { salon } = DataSalon();

  //  -  Menu y UpButton -
  const handleMenu = () => {
    //  switcheamos la clase "is-active" de esta forma: buscamos el selector "panel" y luego entra a su lista de clases y con el m√©todo toggle a√±ade o quita la clase "is-active"
    document.querySelector(".panel").classList.toggle("is-active");
    document.querySelector(".hamburguer-btn").classList.toggle("is-active");
  };
  const handleLinkMenu = () => {
    // con este tercer par√°metro quitamos el "is-active" cuando se selecciona alg√∫n link del men√∫, cerr√°ndolo.
    document.querySelector(".panel").classList.remove("is-active");
    document.querySelector(".hamburguer-btn").classList.remove("is-active");
  };

  // UpButton: Para que el bot√≥n aparezca cuando hacemos scroll para abajo, y desaparezca cuando suba. Usamos las propiedades: "pageYOffset" del objeto Window, || o la propiedad "documentElement.scrollTop" del Document, para detectar a qu√© distancia se ha hecho scroll vertical, y luego determinar que cuando sea mayor de 400 haga aparecer (quita el hidden) al bot√≥n. Con else volvemos a ocultarlo.
  window.addEventListener("scroll", (e) => {
    let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
    if (scrollTop > 450) {
      document.querySelector(".scroll-top-boton").classList.remove("hidden");
    } else {
      document.querySelector(".scroll-top-boton").classList.add("hidden");
    }
    //podr√≠amos ver la actividad del scroll con console.log(window.pageYOffset, document.documentElement.scrollTop)
  });

  /* Apertura y Cierre Fotos - Modales */
  const [isOpenModal, openModal, closeModal] = useModal(false);

  // Esta var de estado env√≠a la ubicacion de la foto como props al componente FigureModal que se abre como una ventana modal
  const [data, setData] = useState({});
  // Dentro de la var de estado data se utiliza "galery" para asignar el grupo de fotos que se manejar√° en el slide. De esta forma se abren los modales con las fotos de cada galer√≠a y se utilizan los botones prev y next.

  // Galerias de fotos - Slides
  const [foto, setFoto] = useState(1);

  function openOneModalSalon() {
    setFoto(1);
    salon.images.forEach((el) => {
      if (el.id === foto) {
        setData({
          galery: "salon",
          foto: el.foto,
        });
      }
    });
    openModal();
  }

  const btnPhotoNext = () => {
    if (data.galery === "salon" && foto < salon.images.length)
      setFoto(foto + 1);
    if (data.galery === "cumple" && foto < dataCumple.images.length)
      setFoto(foto + 1);
    if (data.galery === "posEvento" && foto < dataCumple.posEvento.length)
      setFoto(foto + 1);
    if (data.galery === "souvenir" && foto < dataCumple.souvenir.length)
      setFoto(foto + 1);
  };
  const btnPhotoPrev = () => {
    if (foto !== 1) setFoto(foto - 1);
  };

  useEffect(() => {
    switch (data.galery) {
      case "salon":
        salon.images.forEach((el) => {
          if (el.id === foto) {
            setData({
              galery: "salon",
              foto: el.foto,
            });
          }
        });
        break;

      case "cumple":
        dataCumple.images.forEach((el) => {
          if (el.id === foto) {
            setData({
              galery: "cumple",
              foto: el.foto,
            });
          }
        });
        break;

      case "posEvento":
        dataCumple.posEvento.forEach((el) => {
          if (el.id === foto) {
            setData({
              galery: "posEvento",
              foto: el.foto,
            });
          }
        });
        break;

      case "souvenir":
        dataCumple.souvenir.forEach((el) => {
          if (el.id === foto) {
            setData({
              galery: "souvenir",
              foto: el.foto,
            });
          }
        });
        break;

      default:
        break;
    }
  }, [foto]);

  function openOneModal(id, galerybtn) {
    setData({});
    setFoto(id);

    switch (galerybtn) {
      case "cumple":
        dataCumple.images.map((el) => {
          if (id === el.id) {
            setData({
              galery: "cumple",
              id: el.id,
              foto: el.foto,
            });
          }
        });
        break;

      case "posEvento":
        dataCumple.posEvento.map((el) => {
          if (id === el.id) {
            setData({
              galery: "posEvento",
              id: el.id,
              foto: el.foto,
            });
          }
        });
        break;

      case "souvenir":
        dataCumple.souvenir.map((el) => {
          if (id === el.id) {
            setData({
              galery: "souvenir",
              id: el.id,
              foto: el.foto,
            });
          }
        });
        break;

      default:
        break;
    }

    openModal();
  }

  return (
    <>
      {/* Menu Desplegado */}
      <aside className="panel">
        <nav className="menu">
          <HashLink onClick={handleLinkMenu} smooth to="#posEvento">
            Las fotos de la fiesta!
          </HashLink>
          <HashLink onClick={handleLinkMenu} smooth to="#souvenir">
            Los souvenir
          </HashLink>
          <HashLink onClick={handleLinkMenu} smooth to="#salon">
            ¬øD√≥nde festejamos?
          </HashLink>
          <HashLink onClick={handleLinkMenu} smooth to="#fotos">
            Fotos previas al festejo!
          </HashLink>
        </nav>
      </aside>

      {/*  - -  MAIN - Contenido principal  - -  */}
      <main className="container-fluid">
        <div className="hero-image">
          <img src={dataCumple.invitacion} alt="invitacion" />
          {/*  // Si usamos la Hero Image en el background de un elemento
          <h3>
            Subtitulo dos l√≠neas - linea uno
            <br /> Subtitulo de dos l√≠neas para HeroImage
          </h3>
          <div>
            <h1>T√≠tulo Principal Hero Image</h1>
          </div> */}
        </div>
        <article id="inicio" className="nombre-cumple">
          <h2>
            Festejamos el cumple {dataCumple.a√±osCumple} de {dataCumple.name}
          </h2>
        </article>

        {/*   Desactivamos Countdown y toda el article "cuando" despu√©s de la fiesta.

        <article id="cuando" className="content">
          <div className="highlight">
            <h3>¬øCu√°ndo es?</h3>
            <h2>
              {dataCumple.fecha}
              <br />
              {dataCumple.horario}
            </h2>
          </div>

          <Countdown
            limitDate={limitDate}
            name={dataCumple.name}
            fotosEvento={dataCumple.fotosEvento}
          /> 
        </article>
        */}

        {/*  - - posEvento - Fotos de la fiesta - -  */}
        <article id="posEvento" className="content">
          <div className="highlight">
            <h3>Las fotos de la fiesta!</h3>
          </div>
          <div className="insta-galery">
            {dataCumple.posEvento.map((el) => (
              <div className="insta-gal-div" key={el.id}>
                <img
                  className="insta-foto"
                  onClick={(e) => openOneModal(el.id, "posEvento")}
                  src={el.foto}
                  key={el.id}
                  alt="foto"
                />
              </div>
            ))}
          </div>
        </article>

        {/*  - - Los souvenir - -  */}
        <article id="souvenir" className="content">
          <div className="highlight">
            <h3>Las im√°genes de todos los souvenir</h3>
          </div>
          <div className="grid-insta">
            {dataCumple.souvenir.map((el) => (
              <img
                onClick={(e) => openOneModal(el.id, "souvenir")}
                src={el.foto}
                key={el.id}
                alt="souvenir"
              />
            ))}
          </div>
        </article>

        <article id="salon" className="content">
          <div className="highlight">
            <h2>¬øD√≥nde festejamos?</h2>
            <h3>En el sal√≥n {salon.name}</h3>
            <div className="imagenes-salon">
              <img
                onClick={(e) => openOneModalSalon()}
                className="salon-frente"
                src={salon.imageFront}
                alt="foto fachada sal√≥n"
              />
            </div>
            <h4>{salon.direccion}</h4>
            {/* - - Redes Sociales Sal√≥n - - */}
            <p>Pod√©s contactar al sal√≥n por:</p>
            <h5>
              Tel√©fono: <a href={"tel:" + salon.telefono}>{salon.telefono}</a>
            </h5>
            <div className="redes-salon">
              {salon.whatsapp && (
                <a
                  href={
                    window.navigator.platform === "Win32"
                      ? `https://wa.me/54${salon.whatsapp}?text=Mensaje%20desde:%20INVITACION%20VIRTUAL%20INTELIGENTE¬Æ%0AHola%20les%20consulto%20por%20el%20sal√≥n%20${salon.name}.%0AIndicar%20fecha%20y%20cu√°ntos%20a√±os%20cumple :-)`
                      : `https://wa.me/54${salon.whatsapp}?text=Mensaje%20desde:%20INVITACION%20VIRTUAL%20INTELIGENTE¬Æ%0AHola%20les%20consulto%20por%20el%20sal√≥n%20${salon.name}%20 üòÑIndicar%20fecha%20y%20cu√°ntos%20a√±os%20üéä%20cumple:%20`
                  }
                  target="_blank"
                  rel="noreferrer"
                >
                  <i
                    className="bi bi-whatsapp"
                    style={{
                      color: "rgb(18, 175, 10)",
                    }}
                  ></i>
                </a>
              )}
              {salon.instagram && (
                <a href={salon.instagram} target="_blank" rel="noreferrer">
                  <i
                    className="bi bi-instagram"
                    style={{
                      color: "rgb(188, 42, 141)",
                    }}
                  ></i>
                </a>
              )}
              {salon.facebook && (
                <a href={salon.facebook} target="_blank" rel="noreferrer">
                  <i
                    className="bi bi-facebook"
                    style={{
                      color: "rgb(59,89,151)",
                    }}
                  ></i>
                </a>
              )}
              {salon.tiktok && (
                <a href={salon.tiktok} target="_blank" rel="noreferrer">
                  <i
                    className="bi bi-tiktok"
                    style={{
                      color: "#000",
                    }}
                  ></i>
                </a>
              )}
              {salon.youtube && (
                <a href={salon.youtube} target="_blank" rel="noreferrer">
                  <i
                    className="bi bi-youtube"
                    style={{
                      color: "#f00",
                    }}
                  ></i>
                </a>
              )}
            </div>
            <iframe
              title="Ubicacion Salon en gmaps"
              src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3405.9945390790076!2d-64.22904348464644!3d-31.386714101958383!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x943298dba6407d2f%3A0x17633a4330ac8eab!2sArlek%C3%ADn%20Fiestas%20Infantiles!5e0!3m2!1ses!2sar!4v1677618379217!5m2!1ses!2sar"
              style={{
                width: "100%",
                height: "30vh",
                maxHeight: "40vh",
                style: "border:0",
              }}
              allowFullScreen=""
              loading="lazy"
              referrerPolicy="no-referrer-when-downgrade"
            />
          </div>
        </article>

        <article id="joa4banner" className="hero-image">
          <img src="./assets/joa4.png" alt="logo joaquin 4" />
        </article>

        {/*  - - Fotos Previas al festejo del  cumplea√±ero/a - -  */}
        <article id="fotos" className="content">
          <div className="highlight">
            <h3>Las fotos previas a la fiesta!</h3>
          </div>
          <div className="insta-galery">
            {dataCumple.images.map((el) => (
              <div className="insta-gal-div" key={el.id}>
                <img
                  className="insta-foto"
                  onClick={(e) => openOneModal(el.id, "cumple")}
                  src={el.foto}
                  key={el.id}
                  alt="foto"
                />
              </div>
            ))}
          </div>
        </article>
        <article id="gracias" className="content">
          <div className="highlight">
            <h3>Muchas gracias!</h3>
          </div>
        </article>

        {/*  Modals para la apertura de las fotos del cliente y del salon */}
        {isOpenModal && (
          <FigureModal
            key={data.id}
            foto={data.foto}
            isOpenModal={isOpenModal}
            closeModal={closeModal}
            btnPhotoNext={btnPhotoNext}
            btnPhotoPrev={btnPhotoPrev}
          />
        )}

        {/* Se quita el article del formulario despu√©s del festejo.

        <article id="formConfirm" className="content">
          <FormConfirm />
        </article> */}
      </main>

      {/* Bot√≥n Up */}
      <button className="scroll-top-boton btn btn-dark hidden">
        <HashLink smooth to="#top">
          <div>
            <i className="bi bi-arrow-up-circle-fill"></i>
          </div>
        </HashLink>
      </button>

      {/* Hamburguer Menu */}
      <button
        onClick={handleMenu}
        className="hamburguer-btn hamburger hamburger--spring"
        type="button"
      >
        <span className="hamburger-box">
          <span className="hamburger-inner"></span>
        </span>
      </button>
    </>
  );
}
